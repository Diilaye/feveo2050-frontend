import React, { useState } from 'react';
import Header from './components/Header';
import Footer from './components/Footer';
import { 
  TrendingUp, 
  Shield, 
  Target, 
  Award, 
  ArrowRight, 
  CheckCircle, 
  Building, 
  FileText, 
  User, 
  Mail, 
  Phone, 
  MapPin, 
  DollarSign, 
  Smartphone, 
  Lock,
  CreditCard, 
  Wallet, 
  Camera, 
  AlertCircle, 
  Eye, 
  EyeOff,
  Download,
  QrCode
} from 'lucide-react';

const Investir = () => {
  // √âtats pour le formulaire d'investissement
  const [currentStep, setCurrentStep] = useState(1);
  const [gieData, setGieData] = useState({
    identification: '',
    nom: '',
    presidenteNom: '',
    presidenteEmail: '',
    presidenteTelephone: '',
    region: '',
    secteur: '',
    nombreMembres: '',
    dateCreation: ''
  });
  
  const [subscriptionData, setSubscriptionData] = useState({
    nombreParts: '',
    montantTotal: 0,
    typeInvestissement: '',
    dureeInvestissement: '',
    objectifProjet: '',
    descriptionProjet: ''
  });

  const [paymentData, setPaymentData] = useState({
    operateur: '',
    numeroTelephone: '',
    codePin: '',
    showPin: false
  });

  const [faceVerification, setFaceVerification] = useState({
    isVerified: false,
    isProcessing: false,
    confidence: 0
  });

  const [walletGenerated, setWalletGenerated] = useState(false);
  const [errors, setErrors] = useState({});

  const processSteps = [
    { id: 1, title: 'Identification GIE', icon: Building },
    { id: 2, title: 'Fiche Souscription', icon: FileText },
    { id: 3, title: 'V√©rification Faciale', icon: Camera },
    { id: 4, title: 'Paiement Mobile', icon: Smartphone },
    { id: 5, title: 'Wallet GIE', icon: Wallet }
  ];

  const regions = [
    'Dakar', 'Thi√®s', 'Saint-Louis', 'Diourbel', 'Kaolack', 
    'Tambacounda', 'Kolda', 'Ziguinchor', 'Fatick', 'Kaffrine',
    'K√©dougou', 'Louga', 'Matam', 'S√©dhiou'
  ];

  const secteurs = [
    'Agriculture', '√âlevage', 'P√™che', 'Artisanat', 'Commerce',
    'Transformation alimentaire', 'Textile', 'Services', 'Technologie'
  ];

  const operateurs = [
    { name: 'Orange Money', code: 'orange', logo: 'üü†' },
    { name: 'Free Money', code: 'free', logo: 'üîµ' },
    { name: 'Expresso', code: 'expresso', logo: 'üü£' },
    { name: 'Joni Joni', code: 'joni', logo: 'üü¢' }
  ];

  const typesInvestissement = [
    { value: 'production', label: 'Production Agricole', min: 50000, max: 2000000 },
    { value: 'transformation', label: 'Transformation', min: 100000, max: 5000000 },
    { value: 'commerce', label: 'Commerce/Distribution', min: 25000, max: 1000000 },
    { value: 'mixte', label: 'Projet Mixte', min: 75000, max: 3000000 }
  ];

  const validateStep = (step) => {
    const newErrors = {};
    
    switch (step) {
      case 1:
        if (!gieData.identification.trim()) newErrors.identification = 'Identification requise';
        if (!gieData.nom.trim()) newErrors.nom = 'Nom du GIE requis';
        if (!gieData.presidenteNom.trim()) newErrors.presidenteNom = 'Nom de la pr√©sidente requis';
        if (!gieData.presidenteEmail.trim()) newErrors.presidenteEmail = 'Email requis';
        if (!gieData.region) newErrors.region = 'R√©gion requise';
        break;
      case 2:
        if (!subscriptionData.nombreParts) newErrors.nombreParts = 'Nombre de parts requis';
        if (!subscriptionData.typeInvestissement) newErrors.typeInvestissement = 'Type d\'investissement requis';
        if (!subscriptionData.objectifProjet.trim()) newErrors.objectifProjet = 'Objectif du projet requis';
        break;
      case 4:
        if (!paymentData.operateur) newErrors.operateur = 'Op√©rateur requis';
        if (!paymentData.numeroTelephone.trim()) newErrors.numeroTelephone = 'Num√©ro requis';
        if (!paymentData.codePin.trim()) newErrors.codePin = 'Code PIN requis';
        break;
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleNext = () => {
    if (validateStep(currentStep)) {
      if (currentStep === 2) {
        // Calculer le montant total
        const prixPart = 10000; // 10 000 FCFA par part
        setSubscriptionData(prev => ({
          ...prev,
          montantTotal: parseInt(prev.nombreParts) * prixPart
        }));
      }
      setCurrentStep(prev => prev + 1);
    }
  };

  const handleFaceVerification = () => {
    setFaceVerification(prev => ({ ...prev, isProcessing: true }));
    
    // Simulation de la reconnaissance faciale
    setTimeout(() => {
      const confidence = Math.random() * 30 + 70; // 70-100%
      setFaceVerification({
        isProcessing: false,
        isVerified: confidence > 75,
        confidence: Math.round(confidence)
      });
    }, 3000);
  };

  const handlePayment = () => {
    if (validateStep(4)) {
      // Simulation du paiement
      setTimeout(() => {
        setWalletGenerated(true);
        setCurrentStep(5);
      }, 2000);
    }
  };

  const generateWalletId = () => {
    return `FEVEO-${gieData.identification}-${Date.now().toString().slice(-6)}`;
  };

  const advantages = [
    {
      icon: TrendingUp,
      title: 'Rendement Attractif',
      description: 'Des retours sur investissement comp√©titifs avec une croissance soutenue',
      color: 'text-accent-500'
    },
    {
      icon: Shield,
      title: 'Investissement S√©curis√©',
      description: 'Plateforme r√©gul√©e avec garanties et transparence totale',
      color: 'text-primary-500'
    },
    {
      icon: Target,
      title: 'Impact Social',
      description: 'Contribuez directement √† l\'autonomisation des femmes entrepreneures',
      color: 'text-success-500'
    },
    {
      icon: Award,
      title: 'Excellence Reconnue',
      description: 'Plateforme prim√©e par les institutions financi√®res africaines',
      color: 'text-accent-500'
    }
  ];

  const steps = [
    {
      number: '01',
      title: 'Inscription',
      description: 'Cr√©ez votre compte investisseur en quelques minutes'
    },
    {
      number: '02',
      title: 'V√©rification',
      description: 'Validation de votre profil et de vos documents'
    },
    {
      number: '03',
      title: 'Investissement',
      description: 'Choisissez vos parts et effectuez votre premier investissement'
    },
    {
      number: '04',
      title: 'Suivi',
      description: 'Suivez vos investissements via votre tableau de bord'
    }
  ];

  return (
    <div className="min-h-screen bg-neutral-50">
      <Header onNavigate={() => {}} />
      
      {/* Hero Section */}
      <section className="relative min-h-screen bg-gradient-to-br from-primary-900 via-primary-800 to-accent-900 overflow-hidden">
        {/* Background Effects */}
        <div className="absolute inset-0 opacity-20">
          <div className="w-full h-full bg-repeat" style={{backgroundImage: "url('data:image/svg+xml,%3Csvg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cg fill=\"none\" fill-rule=\"evenodd\"%3E%3Cg fill=\"%23ffffff\" fill-opacity=\"0.05\"%3E%3Ccircle cx=\"30\" cy=\"30\" r=\"2\"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')"}}></div>
        </div>
        <div className="absolute inset-0 bg-gradient-to-t from-primary-900/50 to-transparent"></div>
        
        <div className="relative z-10 container-max mx-auto px-6 py-20 flex items-center min-h-screen">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center w-full">
            {/* Left Content */}
            <div className="text-center lg:text-left">
              <div className="inline-flex items-center bg-accent-500/20 backdrop-blur-sm rounded-full px-4 py-2 mb-6">
                <TrendingUp className="w-4 h-4 text-accent-400 mr-2" />
                <span className="text-accent-400 text-sm font-medium">Investissement Premium</span>
              </div>
              
              <h1 className="text-4xl md:text-6xl lg:text-7xl font-bold text-neutral-50 leading-tight mb-6">
                Investir pour
                <span className="block text-accent-400">l'avenir de l'Afrique</span>
              </h1>
              
              <p className="text-xl text-neutral-200 mb-8 max-w-2xl">
                Rejoignez la r√©volution √©conomique ! Investissez dans FEVEO 2050 et participez √† l'autonomisation de 365 000 femmes entrepreneures africaines.
              </p>
              
              {/* CTA Buttons */}
              <div className="flex flex-col sm:flex-row gap-4 mb-12">
                <button className="btn-accent text-lg px-8 py-4 hover:scale-105 transform transition-all duration-200 group">
                  Commencer √† investir
                  <ArrowRight className="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" />
                </button>
                <button className="btn-secondary bg-neutral-50/10 border-neutral-50/20 text-neutral-50 hover:bg-neutral-50/20 text-lg px-8 py-4">
                  D√©couvrir les projets
                </button>
              </div>
              
              {/* Key Stats */}
              <div className="grid grid-cols-3 gap-6 max-w-md">
                <div className="text-center">
                  <div className="text-2xl font-bold text-accent-400">12%</div>
                  <div className="text-sm text-neutral-300">Rendement annuel</div>
                </div>
                <div className="text-center">
                  <div className="text-2xl font-bold text-success-400">2.5M‚Ç¨</div>
                  <div className="text-sm text-neutral-300">D√©j√† investis</div>
                </div>
                <div className="text-center">
                  <div className="text-2xl font-bold text-primary-400">500+</div>
                  <div className="text-sm text-neutral-300">Investisseurs</div>
                </div>
              </div>
            </div>
            
            {/* Right Visual */}
            <div className="relative">
              <div className="relative bg-gradient-to-br from-accent-500/20 to-primary-500/20 backdrop-blur-sm rounded-2xl p-8 border border-neutral-50/20">
                <div className="absolute inset-0 bg-gradient-to-br from-accent-500/10 to-transparent rounded-2xl"></div>
                <div className="relative z-10">
                  <h3 className="text-2xl font-bold text-neutral-50 mb-6">Pourquoi investir avec nous ?</h3>
                  <div className="space-y-4">
                    {advantages.map((advantage, index) => (
                      <div key={index} className="flex items-start gap-3 group">
                        <div className={`w-10 h-10 rounded-lg bg-neutral-50/10 flex items-center justify-center flex-shrink-0 group-hover:scale-110 transition-transform`}>
                          <advantage.icon className={`w-5 h-5 ${advantage.color}`} />
                        </div>
                        <div>
                          <h4 className="font-semibold text-neutral-50 mb-1">{advantage.title}</h4>
                          <p className="text-sm text-neutral-300">{advantage.description}</p>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* How it Works Section */}
      <section className="py-20 bg-neutral-50">
        <div className="container-max mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold text-neutral-900 mb-4">
              Comment √ßa marche ?
            </h2>
            <p className="text-xl text-neutral-600 max-w-2xl mx-auto">
              Un processus simple et s√©curis√© pour commencer votre parcours d'investissement
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {steps.map((step, index) => (
              <div key={index} className="relative group">
                <div className="bg-white rounded-xl p-6 border border-neutral-200 hover:border-accent-300 hover:shadow-lg transition-all duration-300 h-full">
                  <div className="flex items-center justify-center w-12 h-12 bg-accent-500 text-neutral-50 rounded-full font-bold text-lg mb-4 group-hover:scale-110 transition-transform">
                    {step.number}
                  </div>
                  <h3 className="text-xl font-bold text-neutral-900 mb-3">{step.title}</h3>
                  <p className="text-neutral-600">{step.description}</p>
                </div>
                {index < steps.length - 1 && (
                  <div className="hidden lg:block absolute top-1/2 -right-4 transform -translate-y-1/2">
                    <ArrowRight className="w-6 h-6 text-neutral-300" />
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Investment Section */}
      <section className="py-20 bg-gradient-to-br from-neutral-50 to-neutral-100">
        <div className="container-max mx-auto px-6">
          <div className="text-center mb-16">
            <div className="inline-flex items-center bg-accent-500/10 rounded-full px-4 py-2 mb-4">
              <Target className="w-4 h-4 text-accent-600 mr-2" />
              <span className="text-accent-600 text-sm font-medium">D√©marrez maintenant</span>
            </div>
            <h2 className="text-3xl md:text-4xl font-bold text-neutral-900 mb-6">
              Commencez votre investissement
            </h2>
            <p className="text-xl text-neutral-600 max-w-3xl mx-auto leading-relaxed">
              Rejoignez notre communaut√© d'investisseurs engag√©s et participez √† la transformation √©conomique de l'Afrique. Processus simple, s√©curis√© et transparent.
            </p>
          </div>
          
          {/* Benefits Cards */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-16">
            <div className="bg-white rounded-xl p-6 border border-neutral-200 hover:border-accent-300 hover:shadow-lg transition-all duration-300 group">
              <div className="w-12 h-12 bg-accent-500/10 rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform">
                <Shield className="w-6 h-6 text-accent-500" />
              </div>
              <h3 className="text-lg font-bold text-neutral-900 mb-2">S√©curit√© Garantie</h3>
              <p className="text-neutral-600 text-sm">Vos investissements sont prot√©g√©s par nos garanties et notre r√©glementation stricte.</p>
            </div>
            
            <div className="bg-white rounded-xl p-6 border border-neutral-200 hover:border-success-300 hover:shadow-lg transition-all duration-300 group">
              <div className="w-12 h-12 bg-success-500/10 rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform">
                <TrendingUp className="w-6 h-6 text-success-500" />
              </div>
              <h3 className="text-lg font-bold text-neutral-900 mb-2">Rendement Optimal</h3>
              <p className="text-neutral-600 text-sm">Profitez de rendements attractifs gr√¢ce √† notre expertise en √©conomie organique.</p>
            </div>
            
            <div className="bg-white rounded-xl p-6 border border-neutral-200 hover:border-primary-300 hover:shadow-lg transition-all duration-300 group">
              <div className="w-12 h-12 bg-primary-500/10 rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform">
                <Award className="w-6 h-6 text-primary-500" />
              </div>
              <h3 className="text-lg font-bold text-neutral-900 mb-2">Impact Mesurable</h3>
              <p className="text-neutral-600 text-sm">Suivez l'impact social et √©conomique de vos investissements en temps r√©el.</p>
            </div>
          </div>
          
          {/* Investment Form Container */}
          <div className="bg-white rounded-2xl shadow-xl border border-neutral-200 overflow-hidden">
            <div className="bg-gradient-to-r from-primary-500 to-accent-500 px-8 py-6">
              <h3 className="text-2xl font-bold text-neutral-50 mb-2">Souscription aux Parts d'Investissement</h3>
              <p className="text-neutral-100">Processus s√©curis√© avec identification biom√©trique et g√©n√©ration automatique du Wallet GIE</p>
            </div>
            <div className="p-8">
              {/* Progress Steps */}
              <div className="flex justify-center mb-8 overflow-x-auto">
                <div className="flex items-center space-x-4">
                  {processSteps.map((step, index) => (
                    <div key={step.id} className="flex items-center">
                      <div className={`flex items-center space-x-3 px-4 py-2 rounded-full transition-all duration-300 ${
                        currentStep >= step.id 
                          ? 'bg-accent-500 text-neutral-50' 
                          : 'bg-neutral-50 text-neutral-400 border border-neutral-200'
                      }`}>
                        <step.icon className="w-5 h-5" />
                        <span className="font-medium text-sm whitespace-nowrap">{step.title}</span>
                      </div>
                      {index < processSteps.length - 1 && (
                        <ArrowRight className={`w-5 h-5 mx-2 ${
                          currentStep > step.id ? 'text-accent-500' : 'text-neutral-300'
                        }`} />
                      )}
                    </div>
                  ))}
                </div>
              </div>

              {/* Step 1: GIE Identification */}
              {currentStep === 1 && (
                <div className="max-w-4xl mx-auto">
                  <div className="flex items-center mb-6">
                    <Building className="w-8 h-8 text-accent-500 mr-3" />
                    <h3 className="text-2xl font-bold text-neutral-900">Identification du GIE Affili√©</h3>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div className="md:col-span-2">
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        Code d'identification alphanum√©rique du GIE *
                      </label>
                      <input
                        type="text"
                        value={gieData.identification}
                        onChange={(e) => setGieData(prev => ({ ...prev, identification: e.target.value.toUpperCase() }))}
                        className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200 font-mono text-lg ${
                          errors.identification ? 'border-red-300' : 'border-neutral-300'
                        }`}
                        placeholder="FEVEO-GIE-XXXX-YYYY"
                      />
                      {errors.identification && <p className="text-red-500 text-sm mt-1">{errors.identification}</p>}
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        Nom du GIE *
                      </label>
                      <input
                        type="text"
                        value={gieData.nom}
                        onChange={(e) => setGieData(prev => ({ ...prev, nom: e.target.value }))}
                        className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200 ${
                          errors.nom ? 'border-red-300' : 'border-neutral-300'
                        }`}
                        placeholder="Nom du GIE"
                      />
                      {errors.nom && <p className="text-red-500 text-sm mt-1">{errors.nom}</p>}
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        R√©gion *
                      </label>
                      <select
                        value={gieData.region}
                        onChange={(e) => setGieData(prev => ({ ...prev, region: e.target.value }))}
                        className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200 ${
                          errors.region ? 'border-red-300' : 'border-neutral-300'
                        }`}
                      >
                        <option value="">S√©lectionnez la r√©gion</option>
                        {regions.map((region) => (
                          <option key={region} value={region}>{region}</option>
                        ))}
                      </select>
                      {errors.region && <p className="text-red-500 text-sm mt-1">{errors.region}</p>}
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        Nom de la Pr√©sidente *
                      </label>
                      <input
                        type="text"
                        value={gieData.presidenteNom}
                        onChange={(e) => setGieData(prev => ({ ...prev, presidenteNom: e.target.value }))}
                        className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200 ${
                          errors.presidenteNom ? 'border-red-300' : 'border-neutral-300'
                        }`}
                        placeholder="Nom complet de la pr√©sidente"
                      />
                      {errors.presidenteNom && <p className="text-red-500 text-sm mt-1">{errors.presidenteNom}</p>}
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        Email de la Pr√©sidente *
                      </label>
                      <input
                        type="email"
                        value={gieData.presidenteEmail}
                        onChange={(e) => setGieData(prev => ({ ...prev, presidenteEmail: e.target.value }))}
                        className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200 ${
                          errors.presidenteEmail ? 'border-red-300' : 'border-neutral-300'
                        }`}
                        placeholder="email@exemple.com"
                      />
                      {errors.presidenteEmail && <p className="text-red-500 text-sm mt-1">{errors.presidenteEmail}</p>}
                    </div>
                  </div>

                  <div className="flex justify-end mt-8">
                    <button onClick={handleNext} className="btn-accent px-8 py-3">
                      Continuer
                      <ArrowRight className="w-5 h-5 ml-2" />
                    </button>
                  </div>
                </div>
              )}

              {/* Step 2: Subscription Form */}
              {currentStep === 2 && (
                <div className="max-w-4xl mx-auto">
                  <div className="flex items-center mb-6">
                    <FileText className="w-8 h-8 text-accent-500 mr-3" />
                    <h3 className="text-2xl font-bold text-neutral-900">Fiche de Souscription</h3>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        Type d'investissement *
                      </label>
                      <select
                        value={subscriptionData.typeInvestissement}
                        onChange={(e) => setSubscriptionData(prev => ({ ...prev, typeInvestissement: e.target.value }))}
                        className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200 ${
                          errors.typeInvestissement ? 'border-red-300' : 'border-neutral-300'
                        }`}
                      >
                        <option value="">S√©lectionnez le type</option>
                        {typesInvestissement.map((type) => (
                          <option key={type.value} value={type.value}>
                            {type.label} ({type.min.toLocaleString()} - {type.max.toLocaleString()} FCFA)
                          </option>
                        ))}
                      </select>
                      {errors.typeInvestissement && <p className="text-red-500 text-sm mt-1">{errors.typeInvestissement}</p>}
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        Nombre de parts *
                      </label>
                      <input
                        type="number"
                        min="1"
                        max="500"
                        value={subscriptionData.nombreParts}
                        onChange={(e) => setSubscriptionData(prev => ({ ...prev, nombreParts: e.target.value }))}
                        className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200 ${
                          errors.nombreParts ? 'border-red-300' : 'border-neutral-300'
                        }`}
                        placeholder="Nombre de parts (1 part = 10 000 FCFA)"
                      />
                      {errors.nombreParts && <p className="text-red-500 text-sm mt-1">{errors.nombreParts}</p>}
                      {subscriptionData.nombreParts && (
                        <p className="text-sm text-success-600 mt-1">
                          Montant total: {(parseInt(subscriptionData.nombreParts) * 10000).toLocaleString()} FCFA
                        </p>
                      )}
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        Dur√©e d'investissement
                      </label>
                      <select
                        value={subscriptionData.dureeInvestissement}
                        onChange={(e) => setSubscriptionData(prev => ({ ...prev, dureeInvestissement: e.target.value }))}
                        className="w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200"
                      >
                        <option value="">S√©lectionnez la dur√©e</option>
                        <option value="6">6 mois</option>
                        <option value="12">12 mois</option>
                        <option value="24">24 mois</option>
                        <option value="36">36 mois</option>
                      </select>
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        Objectif du projet *
                      </label>
                      <input
                        type="text"
                        value={subscriptionData.objectifProjet}
                        onChange={(e) => setSubscriptionData(prev => ({ ...prev, objectifProjet: e.target.value }))}
                        className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200 ${
                          errors.objectifProjet ? 'border-red-300' : 'border-neutral-300'
                        }`}
                        placeholder="Ex: D√©veloppement de la production mara√Æch√®re"
                      />
                      {errors.objectifProjet && <p className="text-red-500 text-sm mt-1">{errors.objectifProjet}</p>}
                    </div>

                    <div className="md:col-span-2">
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        Description du projet
                      </label>
                      <textarea
                        rows={4}
                        value={subscriptionData.descriptionProjet}
                        onChange={(e) => setSubscriptionData(prev => ({ ...prev, descriptionProjet: e.target.value }))}
                        className="w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200"
                        placeholder="D√©crivez votre projet d'investissement..."
                      />
                    </div>
                  </div>

                  <div className="flex justify-between mt-8">
                    <button 
                      onClick={() => setCurrentStep(1)} 
                      className="btn-secondary px-8 py-3"
                    >
                      Retour
                    </button>
                    <button onClick={handleNext} className="btn-accent px-8 py-3">
                      Continuer
                      <ArrowRight className="w-5 h-5 ml-2" />
                    </button>
                  </div>
                </div>
              )}
          
          {/* Step 3: Face Verification */}
          {currentStep === 3 && (
            <div className="max-w-4xl mx-auto text-center">
              <div className="flex items-center justify-center mb-6">
                <Camera className="w-8 h-8 text-accent-500 mr-3" />
                <h3 className="text-2xl font-bold text-neutral-900">V√©rification Faciale S√©curis√©e</h3>
              </div>

              <div className="max-w-md mx-auto">
                <div className="bg-neutral-100 rounded-xl p-8 mb-6">
                  {!faceVerification.isProcessing && !faceVerification.isVerified && (
                    <div>
                      <Camera className="w-24 h-24 text-neutral-400 mx-auto mb-4" />
                      <p className="text-neutral-600 mb-6">
                        Positionnez votre visage dans le cadre pour la v√©rification d'identit√© de la Pr√©sidente du GIE
                      </p>
                      <button 
                        onClick={handleFaceVerification}
                        className="btn-accent px-6 py-3"
                      >
                        D√©marrer la v√©rification
                      </button>
                    </div>
                  )}

                  {faceVerification.isProcessing && (
                    <div>
                      <div className="w-24 h-24 border-4 border-accent-500 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
                      <p className="text-accent-600 font-medium">Analyse en cours...</p>
                      <p className="text-sm text-neutral-500 mt-2">Veuillez rester immobile</p>
                    </div>
                  )}

                  {faceVerification.isVerified && (
                    <div>
                      <CheckCircle className="w-24 h-24 text-success-500 mx-auto mb-4" />
                      <p className="text-success-600 font-medium mb-2">V√©rification r√©ussie !</p>
                      <p className="text-sm text-neutral-600">
                        Confiance: {faceVerification.confidence}%
                      </p>
                    </div>
                  )}

                  {!faceVerification.isProcessing && !faceVerification.isVerified && faceVerification.confidence > 0 && (
                    <div>
                      <AlertCircle className="w-24 h-24 text-red-500 mx-auto mb-4" />
                      <p className="text-red-600 font-medium mb-2">V√©rification √©chou√©e</p>
                      <p className="text-sm text-neutral-600 mb-4">
                        Confiance: {faceVerification.confidence}% (minimum requis: 75%)
                      </p>
                      <button 
                        onClick={handleFaceVerification}
                        className="btn-accent px-6 py-3"
                      >
                        R√©essayer
                      </button>
                    </div>
                  )}
                </div>

                <div className="bg-blue-50 rounded-lg p-4 text-left">
                  <div className="flex items-start">
                    <Shield className="w-5 h-5 text-blue-500 mt-0.5 mr-3 flex-shrink-0" />
                    <div>
                      <h4 className="font-medium text-blue-900 mb-1">S√©curit√© garantie</h4>
                      <p className="text-sm text-blue-700">
                        Vos donn√©es biom√©triques sont chiffr√©es et ne sont utilis√©es que pour la v√©rification d'identit√©.
                      </p>
                    </div>
                  </div>
                </div>
              </div>

              <div className="flex justify-between mt-8">
                <button 
                  onClick={() => setCurrentStep(2)} 
                  className="btn-secondary px-8 py-3"
                >
                  Retour
                </button>
                <button 
                  onClick={() => setCurrentStep(4)} 
                  disabled={!faceVerification.isVerified}
                  className={`px-8 py-3 rounded-lg font-medium transition-all duration-200 ${
                    faceVerification.isVerified 
                      ? 'btn-accent' 
                      : 'bg-neutral-300 text-neutral-500 cursor-not-allowed'
                  }`}
                >
                  Continuer
                  <ArrowRight className="w-5 h-5 ml-2" />
                </button>
              </div>
            </div>
          )}

          {/* Step 4: Mobile Payment */}
          {currentStep === 4 && (
            <div className="max-w-4xl mx-auto">
              <div className="flex items-center mb-6">
                <Smartphone className="w-8 h-8 text-accent-500 mr-3" />
                <h3 className="text-2xl font-bold text-neutral-900">Paiement Mobile Money</h3>
              </div>

              <div className="bg-success-50 rounded-lg p-4 mb-6">
                <div className="flex items-center justify-between">
                  <div>
                    <h4 className="font-semibold text-success-800">Montant √† payer</h4>
                    <p className="text-2xl font-bold text-success-600">
                      {subscriptionData.montantTotal.toLocaleString()} FCFA
                    </p>
                    <p className="text-sm text-success-700">
                      {subscriptionData.nombreParts} parts √ó 10 000 FCFA
                    </p>
                  </div>
                  <DollarSign className="w-12 h-12 text-success-500" />
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-neutral-700 mb-2">
                    Op√©rateur Mobile Money *
                  </label>
                  <div className="grid grid-cols-2 gap-3">
                    {operateurs.map((op) => (
                      <button
                        key={op.code}
                        onClick={() => setPaymentData(prev => ({ ...prev, operateur: op.code }))}
                        className={`p-4 border rounded-lg text-center transition-all duration-200 ${
                          paymentData.operateur === op.code
                            ? 'border-accent-500 bg-accent-50 text-accent-700'
                            : 'border-neutral-200 hover:border-neutral-300'
                        }`}
                      >
                        <div className="text-2xl mb-1">{op.logo}</div>
                        <div className="text-sm font-medium">{op.name}</div>
                      </button>
                    ))}
                  </div>
                  {errors.operateur && <p className="text-red-500 text-sm mt-1">{errors.operateur}</p>}
                </div>

                <div>
                  <label className="block text-sm font-medium text-neutral-700 mb-2">
                    Num√©ro de t√©l√©phone *
                  </label>
                  <input
                    type="tel"
                    value={paymentData.numeroTelephone}
                    onChange={(e) => setPaymentData(prev => ({ ...prev, numeroTelephone: e.target.value }))}
                    className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200 ${
                      errors.numeroTelephone ? 'border-red-300' : 'border-neutral-300'
                    }`}
                    placeholder="+221 XX XXX XX XX"
                  />
                  {errors.numeroTelephone && <p className="text-red-500 text-sm mt-1">{errors.numeroTelephone}</p>}

                  <label className="block text-sm font-medium text-neutral-700 mb-2 mt-4">
                    Code PIN *
                  </label>
                  <div className="relative">
                    <input
                      type={paymentData.showPin ? 'text' : 'password'}
                      value={paymentData.codePin}
                      onChange={(e) => setPaymentData(prev => ({ ...prev, codePin: e.target.value }))}
                      className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200 pr-12 ${
                        errors.codePin ? 'border-red-300' : 'border-neutral-300'
                      }`}
                      placeholder="Code PIN"
                      maxLength="4"
                    />
                    <button
                      type="button"
                      onClick={() => setPaymentData(prev => ({ ...prev, showPin: !prev.showPin }))}
                      className="absolute right-3 top-1/2 transform -translate-y-1/2 text-neutral-400 hover:text-neutral-600"
                    >
                      {paymentData.showPin ? <EyeOff className="w-5 h-5" /> : <Eye className="w-5 h-5" />}
                    </button>
                  </div>
                  {errors.codePin && <p className="text-red-500 text-sm mt-1">{errors.codePin}</p>}
                </div>
              </div>

              <div className="bg-amber-50 rounded-lg p-4 mt-6">
                <div className="flex items-start">
                  <Lock className="w-5 h-5 text-amber-500 mt-0.5 mr-3 flex-shrink-0" />
                  <div>
                    <h4 className="font-medium text-amber-900 mb-1">Paiement s√©curis√©</h4>
                    <p className="text-sm text-amber-700">
                      Votre paiement est prot√©g√© par un chiffrement de niveau bancaire. 
                      Vous recevrez un SMS de confirmation apr√®s le paiement.
                    </p>
                  </div>
                </div>
              </div>

              <div className="flex justify-between mt-8">
                <button 
                  onClick={() => setCurrentStep(3)} 
                  className="btn-secondary px-8 py-3"
                >
                  Retour
                </button>
                <button onClick={handlePayment} className="btn-success px-8 py-3">
                  Payer {subscriptionData.montantTotal.toLocaleString()} FCFA
                  <CreditCard className="w-5 h-5 ml-2" />
                </button>
              </div>
            </div>
          )}

          {/* Step 5: Wallet Generated */}
          {currentStep === 5 && walletGenerated && (
            <div className="max-w-4xl mx-auto text-center">
              <div className="flex items-center justify-center mb-6">
                <CheckCircle className="w-12 h-12 text-success-500 mr-3" />
                <h3 className="text-2xl font-bold text-success-600">Wallet GIE G√©n√©r√© avec Succ√®s !</h3>
              </div>

              <div className="max-w-2xl mx-auto">
                <div className="bg-primary-500 rounded-xl p-8 text-neutral-50 mb-8">
                  <div className="flex items-center justify-between mb-6">
                    <div>
                      <h4 className="text-xl font-bold mb-2">WALLET GIE AFFILI√â</h4>
                      <p className="opacity-90">{gieData.nom}</p>
                    </div>
                    <Wallet className="w-12 h-12 opacity-80" />
                  </div>

                  <div className="bg-neutral-50/10 rounded-lg p-4 mb-4">
                    <div className="text-sm opacity-80 mb-1">ID Wallet</div>
                    <div className="font-mono text-lg font-bold">{generateWalletId()}</div>
                  </div>

                  <div className="grid grid-cols-2 gap-4 text-sm">
                    <div className="bg-neutral-50/10 rounded-lg p-3">
                      <div className="opacity-80">Parts souscrites</div>
                      <div className="font-bold text-lg">{subscriptionData.nombreParts}</div>
                    </div>
                    <div className="bg-neutral-50/10 rounded-lg p-3">
                      <div className="opacity-80">Montant investi</div>
                      <div className="font-bold text-lg">{subscriptionData.montantTotal.toLocaleString()} FCFA</div>
                    </div>
                  </div>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                  <div className="bg-neutral-100 rounded-lg p-6">
                    <h5 className="font-semibold text-neutral-900 mb-4">Informations du GIE</h5>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-neutral-600">Code GIE:</span>
                        <span className="font-medium">{gieData.identification}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-neutral-600">Pr√©sidente:</span>
                        <span className="font-medium">{gieData.presidenteNom}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-neutral-600">R√©gion:</span>
                        <span className="font-medium">{gieData.region}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-neutral-600">Statut:</span>
                        <span className="text-success-600 font-medium">‚úì V√©rifi√©</span>
                      </div>
                    </div>
                  </div>

                  <div className="bg-neutral-100 rounded-lg p-6">
                    <h5 className="font-semibold text-neutral-900 mb-4">D√©tails Investissement</h5>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-neutral-600">Type:</span>
                        <span className="font-medium">{typesInvestissement.find(t => t.value === subscriptionData.typeInvestissement)?.label}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-neutral-600">Dur√©e:</span>
                        <span className="font-medium">{subscriptionData.dureeInvestissement} mois</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-neutral-600">Objectif:</span>
                        <span className="font-medium">{subscriptionData.objectifProjet}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-neutral-600">Date:</span>
                        <span className="font-medium">{new Date().toLocaleDateString('fr-FR')}</span>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="flex flex-col sm:flex-row gap-4 justify-center">
                  <button className="btn-primary px-6 py-3">
                    <Download className="w-5 h-5 mr-2" />
                    T√©l√©charger le certificat
                  </button>
                  <button className="btn-secondary px-6 py-3">
                    <QrCode className="w-5 h-5 mr-2" />
                    Code QR Wallet
                  </button>
                  <button className="btn-accent px-6 py-3">
                    <Wallet className="w-5 h-5 mr-2" />
                    Acc√©der au Wallet
                  </button>
                </div>

                <div className="bg-blue-50 rounded-lg p-4 mt-8 text-left">
                  <div className="flex items-start">
                    <User className="w-5 h-5 text-blue-500 mt-0.5 mr-3 flex-shrink-0" />
                    <div>
                      <h4 className="font-medium text-blue-900 mb-1">Acc√®s priv√© s√©curis√©</h4>
                      <p className="text-sm text-blue-700">
                        Votre Wallet GIE est maintenant accessible depuis la rubrique "WALLET GIE" avec un acc√®s priv√© s√©curis√©. 
                        Seuls les membres autoris√©s du GIE peuvent y acc√©der.
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            )}

            {/* Trust Elements */}
            <div className="mt-16 text-center">
              <p className="text-neutral-500 mb-6">Rejoignez plus de 500 investisseurs qui nous font confiance</p>
              <div className="flex items-center justify-center gap-8 opacity-60">
                {[
                  { name: 'S√©curis√© SSL', icon: Shield },
                  { name: 'R√©gul√© BCEAO', icon: CheckCircle },
                  { name: 'Certifi√© ISO', icon: Award }
                ].map((trust, index) => (
                  <div key={index} className="flex items-center gap-2">
                    <trust.icon className="w-5 h-5 text-neutral-400" />
                    <span className="text-sm text-neutral-500 font-medium">{trust.name}</span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </section>

      <Footer />
    </div>
  );
};

export default Investir;
